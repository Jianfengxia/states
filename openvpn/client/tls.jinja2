{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- extends "openvpn/client/base.jinja2" %}

{%- set mine = salt['mine.get']('*', 'monitoring.data') -%}
{%- block device -%}
  {%- if client not in mine %}
dev {{ vpn_instance['device'] | default('tun') }}
  {%- endif -%}
{%- endblock device -%}
{%- set ip_addrs = salt['pillar.get']('ip_addrs', {}) -%}
{%- if ip_addrs -%}
  {%- set remote_address = ip_addrs['public'] -%}
{%- else -%}
  {%- set default_interface = salt['pillar.get']('network_interface', 'eth0') -%}
  {%- set openvpn_interface = salt['pillar.get']('openvpn:public_interface', False)|default(default_interface, boolean=True) -%}
  {%- if 'availabilityZone' in salt['grains.ls']() -%}
    {%- set remote_address = grains['public-ipv4'] -%}
  {%- else -%}
    {%- set remote_address = salt['network.ip_addrs'](openvpn_interface)[0] -%}
  {%- endif -%}
{%- endif -%}

{%- set first_ipv6 = salt['monitoring.data']()['ip_addrs6']['public'] -%}

{%- block authentication_mode %}
client
  {%- set protocol = vpn_instance['protocol']|default('udp') -%}
  {%- set port = vpn_instance['port']|default(1194) -%}
  {%- if protocol.endswith("6") and first_ipv6 %}
tun-ipv6
remote {{ first_ipv6 }} {{ port }} {{ protocol }}
remote {{ remote_address }} {{ port }} {{ (protocol|list)[:-1]|join }}
  {%- else %}
remote {{ remote_address }} {{ port }} {{ protocol }}
  {%- endif %}
  {%- if client in mine %}
ca /etc/openvpn/client/{{ instance }}/ca.crt
cert /etc/openvpn/client/{{ instance }}/{{ client }}.crt
key /etc/openvpn/client/{{ instance }}/{{ client }}.key
syslog openvpn-client-{{ instance }}
writepid /var/run/openvpn-client/{{ instance }}.pid
  {%- else %}
ca ca.crt
cert {{ client }}.crt
key {{ client }}.key
  {%- endif %}
remote-cert-tls server
{%- endblock authentication_mode %}
