#!/bin/bash
# {{ pillar['message_do_not_modify'] }}

# Copyright (c) 2014, Hung Nguyen Viet
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Author: Hung Nguyen Viet <hvnsweeting@gmail.com>
# Maintainer: Hung Nguyen Viet <hvnsweeting@gmail.com>
#
# Script for checking integrity of tar.xz archive, or *.xz files
# used mainly for testing backup archives in backup script, which in turn run
# as cron scripts, so this should not print anything to stdout or stderr.

function validate_archive() {
    # filename must not contains space, it's source of evil
    if [ "$1" != "${1/ /}" ]; then
        echo "Filename must not contain spaces"
        exit 1
    fi

    # limit resources usage
    renice -n 19 -p $$ > /dev/null
    ionice -c idle -p $$
    XZ_DEFAULTS=--memlimit={{ salt['pillar.get']('backup:xz_memlimit', 64) }}MiB

    case "$1" in
        *.tar.xz)
            if [ $(tar -tvf $1 | wc -l) -eq 0 ]; then
                echo "Archive $1 empty or broken"
                exit 1
            fi

            # check if the tar.xz file contains only 1 empty file.
            if [ $(tar -tvf $1 | wc -l) -eq 1 ]; then
                if (tar -tvf $1 | grep -q '  0'); then
                    echo 'Archive contains only an empty file'
                    exit 1
                fi
            fi
            ;;
        *.xz)
            # not a tarball
            if [ $(xz --list $1 | wc -l) -lt 2 ];then
                echo "Archive $1 empty or broken"
                exit 1
            fi
            # check whether the original file is empty (size = 0)
            if [ "$(xz --list --robot $1 | grep ^file | cut -f5)" -eq 0 ]; then
                echo "The original file is empty"
                exit 1
            fi
            ;;
        *)
            echo "Not supported file extension"
            exit 1
            ;;
    esac
}

if [ -z "$1" ]; then
  echo "Usage: $0 archive_file"
  exit 1
else
  validate_archive "$1"
fi
