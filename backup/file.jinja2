#!/bin/bash
# {{ salt['pillar.get']('message_do_not_modify') }}

# Copyright (c) 2014, Luan Vo Ngoc
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Author: Luan Vo Ngoc <luan@robotinfra.com>
# Maintainer: Viet Hung Nguyen <hvn@robotinfra.com>
#
# -e is optional argument, if it is passed as the first argument,
# tar command will ignore warning message when it compress a file which
# is changing. Other arguments can be passed normally after it.
# First argument is name of software component
# Second is the working directory where tar will run
# All other arguments are files tar will archive

set -e

# limit resources usage
renice -n 19 -p $$ > /dev/null
ionice -c idle -p $$
XZ_DEFAULTS=--memlimit={{ salt['pillar.get']('backup:xz_memlimit', 64) }}MiB

if [ $1 = '-e' ]; then
    shift
    logfile=$(tempfile)
fi

software=$1
shift
working_directory=$1
shift

NOW=`/bin/date "+%Y-%m-%d-%H_%M_%S"`
OUTPUT="/tmp/$software-$NOW.tar.xz"

if [ -z "$logfile" ]; then
    tar --xz -cf $OUTPUT -C $working_directory $*
else
    set +e
    tar --xz -cf $OUTPUT -C $working_directory $* 2>$logfile
    set -e
    # workaround tar warning when compress a file which changed in compress process
    errlog=$(cat ${logfile})
    rm $logfile

    set +e
    if [ -z "$errlog" ]; then
        true
    else
        echo "$errlog" | grep -qv "file changed as we read it"

        if [ $? -eq 0 ]; then
            # found another error log than "file changed as we read it" error
            echo "$errlog"
            exit 1
        else
            # no error log or only "file changed as we read it" error
            # go ahead backup it
            true
        fi
    fi
fi

/usr/local/bin/backup-store $OUTPUT
