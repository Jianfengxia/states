{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}

Defaults env_reset
Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

{#- Host alias specification -#}

{#- User alias specification -#}

{#- Cmnd alias specification -#}

{#- User privilege specification #}
root ALL=(ALL:ALL) ALL

{#- Members of the admin group may gain root privileges #}
%admin ALL=(ALL) ALL

{#- ubuntu user is default user in ec2-images.
    It needs passwordless sudo functionality. #}
{%- if 'availabilityZone' in grains %}
ubuntu ALL=(ALL) NOPASSWD:ALL
{%- endif -%}

{#- Allow members of group sudo to execute any command #}
%sudo ALL=(ALL:ALL) ALL

{#- Send mail when the user running sudo does not enter the correct password #}
Defaults mail_badpass
{#- Send mail if the invoking user exists in the sudoers file,
    but is not allowed to run commands on the current host #}
Defaults mail_no_host
{#- Send mail if the invoking user is allowed to use sudo
    but the command they are trying is not listed in their sudoers file entry
    or is explicitly denied #}
Defaults mail_no_perms
Defaults mailerpath={% if salt['pillar.get']('sentry_dsn', False) %}/usr/bin/ravenmail{% else %}/usr/sbin/sendmail
Defaults mailto={{ salt['pillar.get']('smtp:root') }}{% endif %}

{#- See sudoers(5) for more information on "#include" directives: #}
#includedir /etc/sudoers.d
