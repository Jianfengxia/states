{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}

{%- set hostnames = salt['pillar.get']('graylog2:hostnames') %}
upstream graylog2 {
    server 127.0.0.1:9000;
}

upstream rest_api {
    server {{ salt['pillar.get']('graylog2:rest_listen_uri', 'http://127.0.0.1:12900') | replace('http:', '') | replace('/', '') }};
}

server {
    listen 80;
    listen [::]:80;
{%- set ssl = salt['pillar.get']('graylog2:ssl', False) %}
{% if ssl %}
{% if salt['pillar.get']('graylog2:ssl_redirect', False) %}
    {# if https, redirect http port 80 to https port 443 #}
    server_name {% for hostname in hostnames %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ hostnames[0] }}$request_uri;
}
{#- https server #}
server {
{% endif %}{# redirect http to https #}
    {{ ssl_config(salt['pillar.get']('graylog2:ssl', False)) }}
{% endif %}
{#- web app logic #}
    server_name {% for hostname in hostnames %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    root /var/www;

{% include "nginx/block_hacks.jinja2" %}

{% include 'nginx/location_robots.jinja2' %}

    location /api {
        rewrite /api/(.*) /$1  break;
        proxy_pass http://rest_api;
    }

    location / {
        gzip off;
        proxy_pass http://graylog2;
    }
}
