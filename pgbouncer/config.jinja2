# {{ salt['pillar.get']('message_do_not_modify') }}
{%- set authentication = salt['pillar.get']('pgbouncer:authentication', False) %}
{%- set auth_type = salt['pillar.get']('pgbouncer:auth_type', 'md5') %}
[databases]
{% block databases %}
{%- for db, value in salt['pillar.get']('pgbouncer:databases').iteritems() %}
{#-
There are 2 authentication steps: client --> pgbouncer --> PostgreSQL

The userlist.txt file contains the accounts for connecting from client to
PgBouncer. The [databases] section contains the login information for
connecting from PgBouncer to the backend PostgreSQL server.

So, define user/password here if using `any` auth_type or PgBouncer use its own
user database.
-#}
{{ value['dbname'] | default(db) }} = host={{ value['host'] }} port={{ salt['pillar.get']('postgresql:listen_port', 5432) }} dbname={{ db }} {% if auth_type == 'any' or authentication %}user={{ value['username'] }} password={{ value['password'] }}{% endif %}
{%- endfor %}
{% endblock %}
[pgbouncer]
{%- set syslog = salt['pillar.get']('pgbouncer:syslog', True) %}
syslog = {% if syslog %}1{% else %}0{% endif %}

{%- if not syslog %}
logfile = {{ salt['pillar.get']('pgbouncer:logfile', '/var/log/postgresql/pgbouncer.log') }}
{%- endif %}
pidfile = {{ salt['pillar.get']('pgbouncer:pidfile', '/var/run/postgresql/pgbouncer.pid') }}

{% block pgbouncer %}
listen_addr = {% for addr in salt['pillar.get']('pgbouncer:listen_addr', ['127.0.0.1']) %}{{ addr }}{% if not loop.last %}, {% endif %}{% endfor %}
listen_port = {{ salt['pillar.get']('pgbouncer:listen_port', 6432) }}

unix_socket_dir = {{ salt['pillar.get']('pgbouncer:unix_socket_dir', '/var/run/postgresql') }}
auth_type = {{ auth_type }}
{%- if auth_type != 'any' %}
auth_file = /etc/pgbouncer/userlist.txt
    {%- if authentication %}
admin_users = {% for username in authentication %}{{ username }}{% if not loop.last %}, {% endif %}{% endfor %}
    {%- else %}
admin_users = {% for value in salt['pillar.get']('pgbouncer:databases').itervalues() %}{{ value['username'] }}{% if not loop.last %}, {% endif %}{% endfor %}
    {%- endif %}
{%- endif %}

{%- set pool_mode = salt['pillar.get']('pgbouncer:pool_mode', 'session') %}
pool_mode = {{ pool_mode }}
{%- if pool_mode != 'transaction' %}
server_reset_query = DISCARD ALL
{%- endif %}

max_client_conn = {{ salt['pillar.get']('pgbouncer:max_client_conn', 100) }}

default_pool_size = {{ salt['pillar.get']('pgbouncer:default_pool_size', 20) }}

server_idle_timeout = {{ salt['pillar.get']('pgbouncer:server_idle_timeout', 600) }}

idle_transaction_timeout = {{ salt['pillar.get']('pgbouncer:idle_transaction_timeout', 0) }}
{% endblock %}
