{#-
Use of this source code is governed by a BSD license that can be found
in the doc/license.rst file.

Author: Bruno Clermont <bruno@robotinfra.com>
Maintainer: Van Pham Diep <favadi@robotinfra.com>
-#}
# {{ salt['pillar.get']('message_do_not_modify') }}
{%- set python_version = '%d.%d' % (grains['pythonversion'][0], grains['pythonversion'][1]) %}

upstream sentry {
    server unix:///var/lib/uwsgi/sentry.sock;
}

server {
    listen 80;
{%- set ssl = salt['pillar.get']('sentry:ssl', False) %}
{% if ssl %}
{% if salt['pillar.get']('sentry:ssl_redirect', False) %}
{%- set hostnames = salt['pillar.get']('sentry:hostnames') %}
    {# if https, redirect http port 80 to https port 443 #}
    server_name {% for hostname in hostnames %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ salt['pillar.get']('sentry:hostnames')[0] }}$request_uri;
}

server {
{% endif %}{# redirect http to https #}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}
    {{ ssl_config(ssl) }}
{% endif %}

    server_name {% for hostname in salt['pillar.get']('sentry:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};

    root /usr/local/sentry;

{% include "nginx/block_hacks.jinja2" %}

    location /_admin_media/ {
        expires 1h;
        autoindex off;
        alias /usr/local/sentry/lib/python{{ python_version }}/site-packages/django/contrib/admin/static/;
    }

    location /_static/ {
        expires 1h;
        autoindex off;
        alias /usr/local/sentry/lib/python{{ python_version }}/site-packages/sentry/static/;
    }

    location = /favicon.ico {
        alias /usr/local/sentry/lib/python{{ python_version }}/site-packages/sentry/static/sentry/images/favicon.ico;
    }

    location ~ ^/apple-touch-icon {
        root /usr/local/sentry/lib/python{{ python_version }}/site-packages/sentry/static/sentry/bootstrap/docs/assets/ico;
        rewrite ^/apple-touch-icon-([0-9]+)x[0-9]+.png$ /apple-touch-icon-$1-precomposed.png;
    }

    location = /metro-tile.png {
       return 404;
    }

{% include 'nginx/location_robots.jinja2' %}

{%- set timeout = salt['pillar.get']('sentry:timeout', 60) %}

    location / {
        uwsgi_pass sentry;
        include uwsgi_params;
        uwsgi_read_timeout {{ timeout }};
        uwsgi_send_timeout {{ timeout }};
    }
}
