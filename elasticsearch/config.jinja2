{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}

{% set nodes = salt['pillar.get']('elasticsearch:cluster:nodes') %}

bootstrap:
  mlockall: {{ salt['pillar.get']('elasticsearch:mlockall', True)|lower }}

cluster:
  name: {{ salt['pillar.get']('elasticsearch:cluster:name') }}
  routing:
    allocation:
      node_concurrent_recoveries: 2

{%- set pillar_string = 'elasticsearch:cluster:nodes:{0}:{1}'.format(grains['id'], origin_state) %}
http:
  port: 9200
  enabled: {% if salt['pillar.get'](pillar_string + ':http', True) %}true{% else %}false{% endif %}

transport:
  tcp:
    port: {{ salt['pillar.get'](pillar_string + ':port', 9300) }}

node:
  name: {{ salt['pillar.get'](pillar_string + ':name', False)|default(grains['id'], boolean=True) }}
  master: {{ salt['pillar.get'](pillar_string + ':master', None)|default(master, boolean=True) }}
  data: {{ salt['pillar.get'](pillar_string + ':data', None)|default(data, boolean=True) }}

{#- configure amazon ec2 cloud auto-discovery #}
{% if salt['pillar.get']('elasticsearch:aws', False) %}
cloud:
  region: {{ grains['region'] }}
  aws:
    access_key: {{ salt['pillar.get']('elasticsearch:aws:access_key') }}
    secret_key: {{ salt['pillar.get']('elasticsearch:aws:secret_key') }}
  node:
    auto_attributes: true
discovery:
  type: ec2
  zen:
    ping_timeout: 30s
  ec2:
    host_type: private_ip
    any_group: true
    availability_zones: {{ grains['availabilityZone'] }}
gateway:
  recover_after_time: 1m
  recover_after_nodes: 1
  type: s3
  s3:
    bucket: microsigns-{{ grains['region'] }}
    concurrent_streams: 5
indices:
  recovery:
    max_size_per_sec: 0
    concurrent_streams: 5
{% else %}
{# standard static list of cluster nodes #}
discovery:
  zen:
    ping:
      multicast:
        enabled: false
      unicast:
        hosts: [
{%- for node in nodes -%}
    {%- for origin_state in nodes[node] -%}
        {%- if origin_state != '_network' -%}
"{{ nodes[node]['_network']['private'] }}:{{ nodes[node][origin_state]['port']|default(9300) }}",
        {%- endif -%}
    {%- endfor -%}
{%- endfor %}]
{% endif %}
