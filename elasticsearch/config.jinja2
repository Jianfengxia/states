{#-
Author: Bruno Clermont <patate@fastmail.cn>
Maintainer: Bruno Clermont <patate@fastmail.cn>
-#}
# {{ pillar['message_do_not_modify'] }}
{% set es = pillar['elasticsearch'] %}
bootstrap:
  mlockall: true

cluster:
  name: {{ es['cluster']['name'] }}
  routing:
    allocation:
      node_concurrent_recoveries: 2

{%- set state_pillar = salt['pillar.get']('elasticsearch:cluster:nodes:{0}:{1}'.format(grains['id'], origin_state), {}) %}
http:
  port: 9200
  enabled: {% if state_pillar['http']|default(True) %}true{% else %}false{% endif %}

transport:
  tcp:
    port: {{ state_pillar['port']|default(9300) }}

node:
  name: {{ state_pillar['name']|default(grains['id']) }}
  master: {{ state_pillar['master']|default(master) }}
  data: {{ state_pillar['data']|default(data) }}

{#- configure amazon ec2 cloud auto-discovery #}
{% if es['aws']|default(false) %}
cloud:
  region: {{ grains['region'] }}
  aws:
    access_key: {{ es['aws']['access_key'] }}
    secret_key: {{ es['aws']['secret_key'] }}
  node:
    auto_attributes: true
discovery:
  type: ec2
  zen:
    ping_timeout: 30s
  ec2:
    host_type: private_ip
    any_group: true
    availability_zones: {{ grains['availabilityZone'] }}
gateway:
  recover_after_time: 1m
  recover_after_nodes: 1
  type: s3
  s3:
    bucket: microsigns-{{ grains['region'] }}
    concurrent_streams: 5
indices:
  recovery:
    max_size_per_sec: 0
    concurrent_streams: 5
{% else %}
{# standard static list of cluster nodes #}
discovery:
  zen:
    ping:
      multicast:
        enabled: false
      unicast:
        hosts: [
{%- for node in es['cluster']['nodes'] -%}
    {%- for origin_state in es['cluster']['nodes'][node] -%}
        {%- if origin_state != '_network' -%}
"{{ es['cluster']['nodes'][node]['_network']['private'] }}:{{ es['cluster']['nodes'][node][origin_state]['port']|default(9300) }}"{% if not loop.last %}, {% endif -%}
        {%- endif -%}
    {%- endfor -%}
{%- endfor %}]
{% endif %}
