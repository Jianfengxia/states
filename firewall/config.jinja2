{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- set mine = salt['mine.get']('*', 'monitoring.data') -%}
{%- set is_openvzve = grains['virtual'] == 'openvzve' %}
{%- set public_interface = salt['pillar.get']('network_interface', 'eth0')
  if not is_openvzve else "venet0"
%}
{%- set netmask = "128" if ip_addrs_key == "ip_addrs6" else "32" %}
{%- set icmp_type = "icmpv6" if ip_addrs_key == "ip_addrs6" else "icmp" %}

{#- IPV6 NAT only supported in kernel 3.8+ and iptables 1.4.17+ #}
{%- set kernel_version_support_ipv6_nat = False %}
{%- set kmajor, kminor = grains['kernelrelease'].split('.')[:2] %}
{%- if kmajor|float >= 3 %}
  {%- if kminor|float >= 8 %}
     {%- set kernel_version_support_ipv6_nat = True %}
  {%- endif %}
{%- endif %}

# {{ salt['pillar.get']('message_do_not_modify') }}
{%- if not disable_nat|default(False) %}
  {%- if ip_addrs_key == 'ip_addrs6' and not kernel_version_support_ipv6_nat %}
    {# does not include config for NAT #}
  {%- else %}
*nat
{%- block nat %}
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
    {%- if grains['osrelease']|float < 12.04 %}
:INPUT ACCEPT [0:0]
    {%- endif %}
:OUTPUT ACCEPT [0:0]
{%- endblock nat %}
COMMIT
  {%- endif %}
{%- endif %}
*mangle
{%- block mangle %}
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
{%- endblock mangle %}
COMMIT
*filter
{%- block filter %}
:OUTPUT ACCEPT [0:0]
{%- if filter|length > 0 %}
:INPUT {% if is_openvzve %}ACCEPT{% else %}DROP{% endif %} [0:0]
:FORWARD {% if is_openvzve %}ACCEPT{% else %}DROP{% endif %} [0:0]
{%- for ip in blacklist %}
-A INPUT -i {{ public_interface }} -s {{ ip }}/{{ netmask }} -j DROP
{%- endfor %}
-A INPUT -i lo -j ACCEPT
-A INPUT -p {{ icmp_type }} -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
  {%- for host in mine -%}
    {#- if private == public only process public -#}
    {%- if ip_addrs_key in mine[host] and mine[host][ip_addrs_key]['public'] == mine[host][ip_addrs_key]['private'] -%}
      {%- set addr_types = ['public'] -%}
    {%- else -%}
      {%- set addr_types = ['public', 'private'] -%}
    {%- endif -%}
    {%- for addr_type in addr_types -%}
      {%- set ip_addr = mine[host][ip_addrs_key][addr_type] if ip_addrs_key in mine[host] else None %}
      {%- if ip_addr and ip_addr not in pillars_ip %}
-A INPUT -i {{ public_interface }} -s {{ mine[host][ip_addrs_key][addr_type] }}/{{ netmask }} -j ACCEPT
      {%- endif -%}
    {%- endfor -%}
  {%- endfor -%}
  {%- for host in pillars_ip %}
-A INPUT -i {{ public_interface }} -s {{ host }}/{{ netmask }} -j ACCEPT
  {%- endfor -%}
  {%- for protocol, ports in filter.iteritems() -%}
    {%- if ports|length == 1 %}
-A INPUT -i {{ public_interface }} -p {{ protocol }} -m {{ protocol }} --dport {{ ports[0] }} -j ACCEPT
    {%- else %}
-A INPUT -i {{ public_interface }} -p {{ protocol }} -m multiport --dports {% for port in ports %}{{ port }}{% if not loop.last %},{% endif %}{% endfor %} -j ACCEPT
    {%- endif %}{# if length == 1 -#}
    {%- if grains['virtual'] == 'openvzve' %}
-A INPUT -i venet0 -j DROP
    {%- endif -%}
  {%- endfor %}{# host in mine -#}
{%- else %}{# if filter at all #}
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
{%- endif %}
{%- endblock filter %}
COMMIT
