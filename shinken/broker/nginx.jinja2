{#-
Use of this source code is governed by a BSD license that can be found
in the doc/license.rst file.

-#}
# {{ salt['pillar.get']('message_do_not_modify') }}
{%- set mine = salt['mine.get']('*', 'monitoring.data') -%}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}

upstream shinken-backend {
    ip_hash;
{%- set broker = salt['pillar.get']('shinken:architecture:broker') %}
{%- if broker|length == 1 %}
    server 127.0.0.1:7767;
{%- else -%}
  {%- for host in broker -%}
    {%- if host in mine %}
    server {{ mine[host]['ip_addrs']['private'] }}:7767;
    {%- endif -%}
  {%- endfor -%}
{%- endif %}
}

server {
    listen 80;
{%- set ssl = salt['pillar.get']('shinken:ssl', False) -%}
{%- if ssl -%}
  {%- if salt['pillar.get']('shinken:ssl_redirect', False) %}
{%- set hostnames = salt['pillar.get']('shinken:hostnames') %}
    {# if https, redirect http port 80 to https port 443 #}
    server_name {% for hostname in hostnames %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ salt['pillar.get']('shinken:hostnames')[0] }}$request_uri;
}
{#- https server #}
server {
  {%- endif %}{# redirect http to https -#}
    {{ ssl_config(ssl) }}
{%- endif -%}
{#- web app logic #}
    server_name {% for hostname in salt['pillar.get']('shinken:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};

{% include "nginx/block_hacks.jinja2" %}

{% include 'nginx/location_robots.jinja2' %}

    location / {
        proxy_pass http://shinken-backend;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /static/(.*\/)? {
        try_files htdocs/$uri plugins/$1/htdocs/$uri @webui;
    }

    location @webui {
        root /var/lib/shinken/modules/webui/;
    }
}
