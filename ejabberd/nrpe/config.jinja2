{#-
Use of this source code is governed by a BSD license that can be found
in the doc/license.rst file.

Author: Dang Tung Lam <lam@robotinfra.com>
Maintainer: Van Pham Diep <favadi@robotinfra.com>
-#}
{%- set timeout = 30 %}

ejabberd_proc:
  description: ejabberd Process
  command: "/usr/lib/nagios/plugins/check_procs -c 1:1 -C beam -u ejabberd"

ejabberd_c2s_port:
  description: ejabberd XMPP Port (C2S)
  command: /usr/lib/nagios/plugins/check_tcp -H 127.0.0.1 -p 5222 -t {{ timeout }}
  timeout: {{ timeout }}
  dependencies:
    - ejabberd_proc

{%- if salt['pillar.get']('ejabberd:server_to_server', False) %}
ejabberd_s2s_port:
  description: ejabberd Server-to-Server(S2S) Port
  command: /usr/lib/nagios/plugins/check_tcp -H 127.0.0.1 -p 5269 -t {{ timeout }}
  timeout: {{ timeout }}
  dependencies:
    - ejabberd_proc
{%- endif %}

ejabberd_admin_port:
  description: ejabberd admin Port
  command: /usr/lib/nagios/plugins/check_tcp -H 127.0.0.1 -p 5280 -t {{ timeout }}
  timeout: {{ timeout }}
  dependencies:
    - ejabberd_proc

ejabberd_admin_http:
  description: ejabberd admin HTTP
  command: /usr/lib/nagios/plugins/check_http -H 127.0.0.1 -p 5280 -u /admin -e '401 Unauthorized' -t {{ timeout }}
  timeout: {{ timeout }}
  dependencies:
    - ejabberd_admin_port

{%- set monitor_user = "ejabberd_monitor" %}
{%- set hostname = salt['pillar.get']('ejabberd:hostnames')[0] %}
{%- set monitor_password = salt['password.generate']('ejabberd_monitor') %}
ejabberd_xmpp:
  description: Check XMPP server functionality
  command: /usr/lib/nagios/plugins/check_xmpp.py --formula=ejabberd --check=ejabberd_xmpp
  timeout: 60
  dependencies:
    - ejabberd_proc
  arguments:
    jid: {{ monitor_user }}@{{ hostname }}
    password: {{ monitor_password }}
{%- if salt['pillar.get']("__test__", False) %}
    address: "127.0.0.1"
    use_tls: False
{%- endif %}

{%- from 'nginx/nrpe/instance.jinja2' import nginx_instance with context %}
{%- from 'postgresql/server/nrpe/instance.jinja2' import postgresql_instance_prefix with context %}
{%- set deployment = 'ejabberd' %}
{{ postgresql_instance_prefix(deployment) }}
{{ nginx_instance(deployment, http_uri='/admin', https_result='401 Unauthorized', http_result='401 Unauthorized', extra_dependencies=('ejabberd_postgresql', 'ejabberd_admin_http')) }}
