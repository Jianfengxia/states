{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}
upstream roundcube {
    server unix:///var/lib/uwsgi/roundcube.sock;
}
{%- set ssl = salt['pillar.get']('roundcube:ssl', False) %}
{%- set hostnames = salt['pillar.get']('roundcube:hostnames') %}
{%- set timeout = salt['pillar.get']('roundcube:timeout', 60) %}
{%- from 'nginx/macro.jinja2' import http_listen, ssl_config with context %}

server {
    {{ http_listen() }}
{%- if ssl -%}
    {%- if salt['pillar.get']('roundcube:ssl_redirect', False) %}
    {# if https, redirect http port 80 to https port 443 #}
    server_name {% for hostname in hostnames %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ hostnames[0] }}$request_uri;
}
{#- https server #}
server {
    {%- endif %}{# redirect http to https #}
    {{ ssl_config(salt['pillar.get']('roundcube:ssl', False)) }}
{%- endif -%}

{#- web app logic #}
    server_name {% for hostname in hostnames -%}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    root {{ dir }};

{% include "nginx/block_hacks.jinja2" %}

{%- for dir in ('skins',) %}
    location /{{ dir }}/ {
        expires max;
        autoindex off;
    }
{%- endfor %}

    index index.php index.html index.htm;
    location / {
        try_files $uri $uri/ /index.html;
    }

{% include 'nginx/location_robots.jinja2' %}

    location ~ .php$ {
        gzip off;
        include uwsgi_params;
        uwsgi_read_timeout {{ timeout }};
        uwsgi_send_timeout {{ timeout }};
        uwsgi_modifier1 14;
        uwsgi_pass roundcube;
    }

    location ~ ^/?(\.git|\.tx|SQL|bin|config|logs|temp|tests|program\/(include|lib|localization|steps)) {
        return 403;
    }

    location ~ /?(README\.md|CHANGELOG|INSTALL|LICENSE|UPGRADING)$ {
        return 403;
    }

    location /favicon {
        rewrite ^/favicon\.ico$ /skins/larry/images/favicon.ico;
    }
}
