# {{ pillar['message_do_not_modify'] }}

[global]
pid = /var/run/php5-fpm.pid
error_log = syslog
{# Possible Values: alert, error, warning, notice, debug #}
log_level = notice

{#
 If this number of child processes exit with SIGSEGV or SIGBUS within the time
 interval set by emergency_restart_interval then FPM will restart. A value
 of '0' means 'Off'.
 Default Value: 0
#}
emergency_restart_threshold = {{ salt['pillar.get']('php5-fpm:emergency_restart_threshold', 0) }}

{#
 Interval of time used by emergency_restart_interval to determine when
 a graceful restart will be initiated.  This can be useful to work around
 accidental corruptions in an accelerator's shared memory.
 Available Units: s(econds), m(inutes), h(ours), or d(ays)
 Default Unit: seconds
 Default Value: 0
#}
emergency_restart_interval = {{ salt['pillar.get']('php5-fpm:emergency_restart_interval', 0) }}

{#
 Time limit for child processes to wait for a reaction on signals from master.
 Available units: s(econds), m(inutes), h(ours), or d(ays)
 Default Unit: seconds
 Default Value: 0
#}
process_control_timeout = {{ salt['pillar.get']('php5-fpm:process_control_timeout', 0) }}

{#
 Set open file descriptor rlimit for the master process.
 Default Value: system defined value
#}
rlimit_files = {{ salt['pillar.get']('php5-fpm:rlimit_files', 1024) }}

{#
 Set max core size rlimit for the master process.
 Possible Values: 'unlimited' or an integer greater or equal to 0
 Default Value: system defined value
#}
rlimit_core = {{ salt['pillar.get']('php5-fpm:rlimite_core', 0) }}

{# load pools #}
include=/etc/php5/fpm/pool.d/*.conf

