# {{ salt['pillar.get']('message_do_not_modify') }}
{#- use default DSN or one specified in context -#}
{%- set config = {
        'dsn': sentry_dsn|default(False),
        'default_dsn': salt['pillar.get']('sentry_dsn', False)
    } -%}
{%- if not config['dsn'] and config['default_dsn'] -%}
    {% do config.update({'dsn': config['default_dsn']}) -%}
{%- endif -%}

{%- block logging %}
logging:
  version: 1
  disable_existing_loggers: False
    {%- if not process_name|default(False) %}
  filters:
    process_name:
      (): pysc.ProcessName
    {%- endif %}
  formatters:
    {%- block logging_formatters %}
    only_message:
      format: '%(message)s'
    syslog:
      format: '{{ process_name|default('%(process_name)s') }}[%(process)d]: %(message)s'
    {%- endblock logging_formatters %}
  handlers:
    {%- block logging_handlers %}
    syslog:
      level: {% if salt['pillar.get']('debug', False) %}DEBUG{% else %}INFO{% endif %}
      class: logging.handlers.SysLogHandler
      address: /dev/log
      facility: daemon
      formatter: syslog
        {%- if not process_name|default(False) %}
      filters:
        - process_name
        {%- endif %}
    console:
      level: {% if salt['pillar.get']('__test__', False) %}DEBUG{% else %}ERROR{% endif %}
      class: logging.StreamHandler
      formatter: only_message
        {%- if config['dsn'] %}
    sentry:
      level: WARNING
      class: raven.handlers.logging.SentryHandler
      dsn: requests+{{ config['dsn'] }}
        {%- endif %}
    {%- endblock logging_handlers %}
  loggers:
    {%- block logging_loggers %}
    '':
      level: DEBUG
      handlers:
        - syslog
        - console
        {%- if config['dsn'] %}
        - sentry
        {%- endif -%}
    {%- endblock logging_loggers %}
{%- endblock logging -%}

{%- block sentry %}
sentry_dsn: {{ config['dsn'] }}
{%- endblock -%}

{%- block body %}{% endblock -%}
