#!/bin/bash
# Use of this is governed by a license that can be found in doc/license.rst.
# Run a full scan on / except some directories ( /sys, /dev, /proc, /run)

# limit resources usage
renice -n 19 -p $$ > /dev/null
ionice -c idle -p $$

# safe guard
set -o nounset
set -o errexit
set -o pipefail

readonly status_file=/var/lib/clamav/last-scan

# log start stop time to syslog
source /usr/local/share/salt_common.sh
# Ensure that only one instance of this script is running at a time
locking_script
log_start_script "$@"
trap "log_stop_script \$?" EXIT

exclude_list=('/sys' '/dev' '/proc' '/run')

exclude_string=""
for exclude in "${exclude_list[@]}"; do
    exclude_string="${exclude_string}! ( -path $exclude -prune ) "
done

# empty the last scan result before scanning
> "$status_file"

retval=0
find / -mtime -1 $exclude_string {% for path in salt['pillar.get']('clamav:exclude_paths', []) %}! \( -path "{{ path }}" -prune \){% if not loop.last %} {% endif %}{% endfor %} -type f -print0 | xargs -0 clamdscan {% if salt['pillar.get']('clamav:mode', 'local') == "local" %}--fdpass {% endif %}--quiet -l "$status_file" || retval=$?

case "$retval" in
    0 ) # no virus found
        exit 0 ;;
    1 ) # virus(es) found
        grep ' FOUND$' "$status_file" | logger -s -t clamdscan -p local0.error
        exit 1 ;;
    2 ) # an error occured
        egrep '^WARNING: |^ERROR: ' "$status_file" | logger -s -t clamdscan -p local0.error
        exit 2 ;;
esac
