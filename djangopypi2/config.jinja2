# {{ pillar['message_do_not_modify'] }}
import errno
import os
import sys
import urlparse
from . import user_settings

PROJECT_ROOT = "/var/lib/deployments/djangopypi2"
USER_SETTINGS = user_settings.load(PROJECT_ROOT)

DEBUG = USER_SETTINGS['DEBUG']
TEMPLATE_DEBUG = DEBUG

ADMINS = USER_SETTINGS['ADMINS']
TIME_ZONE = USER_SETTINGS['TIME_ZONE']
LANGUAGE_CODE = USER_SETTINGS['LANGUAGE_CODE']
ALLOW_VERSION_OVERWRITE = USER_SETTINGS['ALLOW_VERSION_OVERWRITE']
USE_HTTPS = USER_SETTINGS['USE_HTTPS']

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{ salt["pillar.get"]("djangopypi2:db:name", "djangopypi2") }}',
        'USER': '{{ salt["pillar.get"]("djangopypi2:db:username", "djangopypi2") }}',
        'PASSWORD': '{{ salt["password.pillar"]("djangopypi2:db:password") }}',
        'HOST': '{{ salt["pillar.get"]("djangopypi2:db:host", "127.0.0.1") }}',
        'PORT': '5432',
    }
}

SITE_ID = 1

USE_I18N = True
USE_L10N = True
USE_TZ = True

MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')
MEDIA_URL = USER_SETTINGS['WEB_ROOT'].rstrip('/') + '/media/'

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
STATIC_URL = USER_SETTINGS['WEB_ROOT'].rstrip('/') + '/static/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

SECRET_KEY = 'qf!u&amp;+fb+m4g@z8=#^v4du0)&amp;51z0e@_j+5tyw)w9=f20a6wr*'

TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
)

ROOT_URLCONF = 'djangopypi2.website.urls'

WSGI_APPLICATION = 'djangopypi2.website.wsgi.application'

LOGIN_URL = '/accounts/login/'
LOGOUT_URL = '/accounts/logout/'
LOGIN_REDIRECT_URL = '/'

TEMPLATE_CONTEXT_PROCESSORS = [
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.request',
]

WEBSITE_ROOT = os.path.dirname(os.path.realpath(__file__))

TEMPLATE_DIRS = (
    os.path.join(WEBSITE_ROOT, 'templates'),
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',
    'registration',
    'djangopypi2.apps.pypi_ui',
    'djangopypi2.apps.pypi_users',
    'djangopypi2.apps.pypi_manage',
    'djangopypi2.apps.pypi_metadata',
    'djangopypi2.apps.pypi_packages',
    'djangopypi2.apps.pypi_frontend',
    'django_insecure',
)

ACCOUNT_ACTIVATION_DAYS = 7

{%- set smtp = salt['pillar.get']('djangopypi2:web:email', salt['pillar.get']('smtp')) %}
EMAIL_HOST = '{{ smtp['server'] }}'
EMAIL_HOST_PASSWORD = '{{ smtp['password']|default('') }}'
EMAIL_HOST_USER = '{{ smtp['user']|default('') }}'
EMAIL_PORT = {{ smtp['port'] }}
DEFAULT_FROM_EMAIL = '{{ smtp['from'] }}'
{% if smtp['tls']|default(False) %}
EMAIL_USE_TLS = True
{% else %}
EMAIL_USE_TLS = False
{% endif %}

if USE_HTTPS:
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'syslog': {
            'format': '%(asctime)-15s djangopypi2[%(process)d] %(levelname)s %(name)s %(module)s.%(funcName)s:%(lineno)d %(message)s',
            'datefmt': '%b %d %H:%M:%S'
        }
    },
    'handlers': {
{% if 'graylog2_address' in pillar %}
        'gelf': {
            'level': 'NOTSET',
            'class': 'graypy.handler.GELFHandler',
            'host': '{{ pillar['graylog2_address'] }}',
            'formatter': 'message_only'
        },
{% endif %}
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'sentry': {
            'level': 'ERROR',
            'class': 'raven.contrib.django.handlers.SentryHandler'
        },
        'syslog': {
            'level': 'NOTSET',
            'formatter': 'syslog',
            'class': 'logging.handlers.SysLogHandler',
            'address': '/dev/log',
            'facility': 'local7'
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django': {
            'handlers': ['sentry', 'syslog'{% if 'graylog2_address' in pillar %}, 'gelf'{% endif %}],
            'propagate': True,
            'level':'DEBUG'
        },
        'raven': {
            'handlers': ['sentry', 'syslog'{% if 'graylog2_address' in pillar %}, 'gelf'{% endif %}],
            'level': 'WARN',
            'propagate': False
        },
        'sentry.errors': {
            'handlers': ['syslog'{% if 'graylog2_address' in pillar %}, 'gelf'{% endif %}],
            'level': 'DEBUG',
            'propagate': False
        },
     },
    'root': {
        'handlers': ['sentry', 'syslog'{% if 'graylog2_address' in pillar %}, 'gelf'{% endif %}],
        'propagate': True,
        'level': 'NOTSET'
    },
}
RAVEN_CONFIG = {
    'dsn': '{{ pillar['djangopypi2']['web']['sentry'] }}',
}

{%- if 'graphite_address' in pillar %}
MIDDLEWARE_CLASSES = MIDDLEWARE_CLASSES + (
    'django_statsd.middleware.GraphiteRequestTimingMiddleware',
    'django_statsd.middleware.GraphiteMiddleware'
)
INSTALLED_APPS += ('django_statsd',)
STATSD_PREFIX = 'djangopypi2'
STATSD_CLIENT = 'django_statsd.clients.normal'
{%- endif %}

ALLOWED_HOSTS = [{% for hostname in pillar['djangopypi2']['hostnames'] %}"{{ hostname }}"{% if not loop.last %} , {% endif %}{% endfor %}]
