# {{ pillar['message_do_not_modify'] }}

use strict;

$myhostname = "{{ pillar['mail']['mailname'] }}";

{%- if salt['pillar.get']('amavis:check_virus', True) %}
{#- enable virus checking #}
@bypass_virus_checks_maps = (
   \%bypass_virus_checks, \@bypass_virus_checks_acl, \$bypass_virus_checks_re);
{%- else %}
{#- disable virus checking #}
@bypass_virus_checks_maps = (1);
{%- endif %}
{#- enable anti-spam checking #}
@bypass_spam_checks_maps = (
   \%bypass_spam_checks, \@bypass_spam_checks_acl, \$bypass_spam_checks_re);

{#- number of pre-forked children #}
$max_servers = {{ salt['pillar.get']('mail:maxproc', 2) }};

{#- amavis will tell LDA/LMTP move spam emails to user/spam folder #}
$recipient_delimiter = '+';
@addr_extension_spam_maps = ('spam');

{#- just move spam to user/spam folder, no need to change its subject #}
$sa_spam_subject_tag = '';
{#- add SA tag to all emails #}
$sa_tag_level_deflt = {{ salt['pillar.get']('amavis:sa_tag_level', -999) }};
{#- add tags for spammy emails #}
$sa_tag2_level_deflt = {{ salt['pillar.get']('amavis:sa_tag2_level', 6.31) }};
{#- real spam score #}
$sa_kill_level_deflt = {{ salt['pillar.get']('amavis:sa_kill_level', 10) }};
{#- when spam score exceeds this, do not send delivery status notification msg #}
$sa_dsn_cutoff_level = {{ salt['pillar.get']('amavis:sa_kill_level', 100) }};
{#- transport spam email to rcpt #}
$final_spam_destiny=D_PASS;

{#- who will receive notify when there is REAL spam email #}
{%- if pillar.get('amavis:transport_spam_to_postmaster', False) %}
$spam_admin = '{{ pillar['mail']['postmaster'] }}';
{%- endif %}
{#- send a template mail to warn spam sender #}

$warnspamsender = {% if salt['pillar.get']('amavis:warn_spam_sender', False) %}1{% else %}0{% endif %};

1;
