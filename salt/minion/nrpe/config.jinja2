{#- Usage of this is governed by a license that can be found in doc/license.rst -#}
{%- from 'nrpe/passive.jinja2' import passive_interval with context -%}

# {{ salt['pillar.get']('message_do_not_modify') }}

salt_minion_procs:
  description: Salt Minion Daemon
  command: /usr/lib/nagios/plugins/check_procs -c 1:3 -a '/usr/bin/python /usr/bin/salt-minion' -u root

salt_minion_last_success:
  description: Salt Minion last success highstate call
  command: sudo /usr/lib/nagios/plugins/check_minion_last_success.py --formula=salt.minion --check=salt_minion_last_success
  first_notification_delay: 30
  check_period: weekdays
  notification_period: weekdays
  timeout: 55
  arguments:
    max_hours: 48
  {{ passive_interval(24 * 60) }} {#- 1 day, wait for the first highstate is run #}
  dependencies:
    {#- no alert if load is too high #}
    - load_average

salt_minion_pillar_render:
  description: Salt Minion pillar render
  command: sudo /usr/lib/nagios/plugins/check_minion_pillar_render.py --formula=salt.minion --check=salt_minion_pillar_render --cronresult
  {{ passive_interval(12 * 60) }} {#- 12 hours #}
  timeout: {{ 10 * 60 }} {#- cron jobs timeout after 10 minutes #}
  arguments:
    freshness: {{ (12 * 60) + 10 + 5 }} {#- cron interval + timeout + 5 mins #}
    salt_timeout: {{ 60 * 5 }} {#- 5 minutes #}
  dependencies:
    {#- no alert if load is too high #}
    - load_average
