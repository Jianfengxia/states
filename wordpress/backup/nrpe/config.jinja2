{#- Usage of this is governed by a license that can be found in doc/license.rst -#}
# {{ salt['pillar.get']('message_do_not_modify') }}
{%- from 'nrpe/passive.jinja2' import passive_interval with context %}

wordpress_backup_mysql_procs:
  description: WordPress Backup MySQL Database Process
  command: '/usr/lib/nagios/plugins/check_procs -c 0:1 -u root -a "/usr/local/bin/backup-mysql {{ salt['pillar.get']('wordpress:db:name', 'wordpress') }}"'

wordpress_backup_procs:
  description: WordPress Backup File Process
  command: '/usr/lib/nagios/plugins/check_procs -c 0:1 -u root -a "/usr/local/bin/backup-file wordpress /usr/local/wordpress/wp-content uploads"'

wordpress_backup_mysql_age:
  description: WordPress MySQL Database Backup's Age
  command: /usr/lib/nagios/plugins/check_backup.py --formula=wordpress.backup --check=wordpress_backup_mysql_age
  {{ passive_interval(12 * 60) }} {#- 12 hours #}
  timeout: 55
  arguments:
    facility: mysql-wordpress
{%- set age = salt['pillar.get']('backup:age', 48) %}
    warning: {{ age }}
  dependencies:
    {#- no alert if load is too high #}
    - load_average

wordpress_backup:
  description: WordPress Backup Age And Size
  command: "/usr/lib/nagios/plugins/check_backup.py -w {{ salt['pillar.get']('backup:age', 48) }} wordpress"
  {{ passive_interval(12 * 60) }} {#- 12 hours #}
  arguments:
    facility: mysql-wordpress
    warning: {{ salt['pillar.get']('backup:age', 48) }}
  timeout: 55
  dependencies:
    {#- no alert if load is too high #}
    - load_average
