{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}
upstream wordpress {
    server unix:///var/lib/uwsgi/wordpress.sock;
}

server {
    listen 80;
{% if salt['pillar.get']('wordpress:ssl', False) %}
{% if salt['pillar.get']('wordpress:ssl_redirect', False) %}
    {# if https, redirect http port 80 to https port 443 #}
    server_name {% for hostname in salt['pillar.get']('wordpress:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ salt['pillar.get']('wordpress:hostnames')[0] }}$request_uri;
}
{# https server #}
server {
{% endif %}{# redirect http to https #}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}
    {{ ssl_config(salt['pillar.get']('wordpress:ssl')) }}
{% endif %}

{# web app logic #}
    server_name {% for hostname in salt['pillar.get']('wordpress:hostnames') -%}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    root {{ dir }};

{% include "nginx/block_hacks.jinja2" %}

{% for dir in ('skins',) %}
    location /{{ dir }}/ {
        expires max;
        autoindex off;
    }
{% endfor %}

    index index.php index.html index.htm;
    location / {
        try_files $uri $uri/ /index.html;
    }

{% include 'nginx/location_robots.jinja2' %}

    location ~ .php$ {
        gzip off;
        include uwsgi_params;
        uwsgi_modifier1 14;
        uwsgi_pass wordpress;
    }
}
