{#-
 Author: Hung Nguyen Viet hvnsweeting@gmail.com
 Maintainer: Hung Nguyen Viet hvnsweeting@gmail.com
 -#}
{% set rootdn = salt['pillar.get']('ldap:rootdn') %}
dn: olcDatabase={1}hdb,cn=config
changetype: modify
replace: olcSuffix
olcSuffix: {{ salt['pillar.get']('ldap:suffix') }}
-
replace: olcRootDN
olcRootDN: {{ rootdn }}
-
replace: olcRootPW
olcRootPW: {{ salt['pillar.get']('ldap:rootpw') }}
-
delete: olcAccess
-
add: olcAccess
olcAccess: {0}to * by dn.exact=gidNumber=0+uidNumber=0,cn=peercred,cn=external
 ,cn=auth manage by * break
olcAccess: {1}to attrs=userPassword,shadowLastChange by self write by anonymou
 s auth by dn="{{ rootdn }}" write by * none
olcAccess: {2}to dn.base="" by * read
olcAccess: {3}to * by self write by dn="{{ rootdn }}" write
  by * read

dn: cn=config
changetype: modify
replace: olcLogLevel
olcLogLevel: {{ salt['pillar.get']('ldap:log_level', 256) }}
{% if salt['pillar.get']('ldap:ssl', False) -%}
-
replace: olcTLSCACertificateFile
olcTLSCACertificateFile: /etc/ssl/{{ salt['pillar.get']('ldap:ssl') }}/ca.crt
-
replace: olcTLSCertificateFile
olcTLSCertificateFile: /etc/ssl/{{ salt['pillar.get']('ldap:ssl') }}/server.crt
-
replace: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/ssl/{{ salt['pillar.get']('ldap:ssl') }}/server.pem
-
replace: olcSecurity
olcSecurity: ssf=128
-
replace: olcTLSVerifyClient
olcTLSVerifyClient: never
-
replace: olcTLSCipherSuite
{# use openssl CipherSuite here cause a segfault -#}
olcTLSCipherSuite: SECURE256:!AES-128-CBC
-
replace: olcLocalSSF
olcLocalSSF: 128
{% endif -%}
