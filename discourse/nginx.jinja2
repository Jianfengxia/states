{#-
Copyright (C) 2013 the Institute for Institutional Innovation by Data
Driven Design Inc.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE  MASSACHUSETTS INSTITUTE OF
TECHNOLOGY AND THE INSTITUTE FOR INSTITUTIONAL INNOVATION BY DATA
DRIVEN DESIGN INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the names of the Institute for
Institutional Innovation by Data Driven Design Inc. shall not be used in
advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from the
Institute for Institutional Innovation by Data Driven Design Inc.

Author: Lam Dang Tung <lamdt@familug.org>
Maintainer: Lam Dang Tung <lamdt@familug.org>
-#}
# {{ pillar['message_do_not_modify'] }}

types {
  text/csv csv;
}

upstream discourse {
  server unix:///var/lib/uwsgi/discourse.sock;
}

server {
  listen 80;

{%- if salt['pillar.get']('discourse:ssl', False) %}
{%- if salt['pillar.get']('discourse:ssl_redirect', False) %}
  {# if https, redirect http port 80 to https port 443 #}
  server_name {% for hostname in salt['pillar.get']('discourse:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
  return 301 https://{{ salt['pillar.get']('discourse:hostnames')[0] }}$request_uri;
}
{# https server #}
server {
{% endif %}{# redirect http to https #}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}
    {{ ssl_config(pillar['discourse']['ssl']) }}
{%- endif %}
{#- web app logic #}

  gzip on;
  gzip_min_length 1000;
  gzip_types application/json text/css application/x-javascript;

  server_name {% for hostname in salt['pillar.get']('discourse:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};

  sendfile on;

  keepalive_timeout 65;

  {#-
   maximum file upload size (keep up to date when changing the corresponding site setting)
  #}
  client_max_body_size {{ salt['pillar.get']('discourse:upload_size', '2m') }};

  {#-
   path to discourse's public directory
  #}
  set $public {{ web_root_dir }}/public;

  location / {
    root $public;

    location ~ ^/assets/ {
      expires 1y;
      add_header Cache-Control public;
      add_header ETag "";
      break;
    }

    location ~ ^/uploads/ {
      expires 1y;
      add_header Cache-Control public;
      add_header ETag "";

      {#-
       optional upload anti-hotlinking rules
       valid_referers none blocked mysite.com *.mysite.com;
      if ($invalid_referer) {
        return 403;
      }
      #}

      {#-
       let NGINX serve images
      #}
      location ~* \.(gif|png|jpg|jpeg|bmp|tif|tiff)$ { try_files $uri =404; }
      location ~ /_optimized/ { try_files $uri =404; }

      {#-
       attachments must go through the rails application to get the right content-disposition header
      #}
      uwsgi_param X-Sendfile-Type X-Accel-Redirect;
      uwsgi_param X-Accel-Mapping $public/=/downloads/;

      uwsgi_modifier1 7;
      include uwsgi_params;
      uwsgi_pass discourse;
      break;
    }

    try_files $uri @discourse;
  }

  location /downloads/ {
    internal;
    alias $public/;
  }

  location @discourse {
    uwsgi_param X-Real-IP $remote_addr;
    uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
    uwsgi_param X-Forwarded-Proto $scheme;
    uwsgi_param Host $http_host;

    uwsgi_modifier1 7;
    include uwsgi_params;
    uwsgi_pass discourse;
  }
}

