{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{%- from 'diamond/macro.jinja2' import diamond_process_test with context %}
include:
  - bash
  - doc
  - fail2ban
  - fail2ban.diamond
  - fail2ban.nrpe
  - firewall
  - python

{%- set fake_ip = '5.6.7.8' %}

fake_ssh_login:
  cmd:
    - run
    - name: |
{%- set maxretry = salt['pillar.get']('fail2ban:maxretry', 3) %}
        logger -p auth.info 'The {{ maxretry + 1 }} sshd below lines are generated by logger to test Fail2ban'
        for i in $(seq {{ maxretry + 1 }}); do logger -p auth.warning -t 'sshd[1234]' 'Failed password for root from {{ fake_ip }} port 91011 ssh2'; done
    - require:
      - sls: bash
      - sls: fail2ban

test:
  module:
    - run
    - name: service.restart
    - m_name: fail2ban
    - require:
      - cmd: fake_ssh_login
  cmd:
    - run
    {#- Fail2ban need a few seconds to scan the sshd log #}
    - name: sleep 3 && fail2ban-client set ssh unbanip {{ fake_ip }}
    - require:
      - module: test
  diamond:
    - test
    - map:
        ProcessResources:
          {{ diamond_process_test('fail2ban') }}
        UserScripts:
          fail2ban.ssh: True
    - require:
      - file: /usr/local/diamond/share/diamond/user_scripts/count_banned_ssh.sh
  monitoring:
    - run_all_checks
    - order: last
  qa:
    - test
    - name: fail2ban
    - pillar_doc: {{ opts['cachedir'] }}/doc/output
    - require:
      - monitoring: test
      - cmd: doc
