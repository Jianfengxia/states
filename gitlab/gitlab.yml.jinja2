{#-
Copyright (c) 2013 Lam Dang Tung

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Author: Lam Dang Tung lamdt@familug.org
Maintainer: Lam Dang Tung lamdt@familug.org
 -#}
# {{ pillar['message_do_not_modify'] }}

# GitLab application config file

production: &base
  {#-
   1. GitLab app settings
   ==========================

   GitLab settings
  #}
  gitlab:
    {#-
    Web server settings
    #}
    host: {{ salt['pillar.get']('gitlab:hostnames')[0] }}
    port: {{ salt['pillar.get']('gitlab:port', '80') }}
    {%- if salt['pillar.get']('gitlab:ssl', False) %}
    https: true
    {%- else %}
    https: false
    {%- endif %}

    {#-
     WARNING: This feature is no longer supported
     Uncomment and customize to run in non-root path
     Note that ENV['RAILS_RELATIVE_URL_ROOT'] in config/puma.rb may need to be changed

     relative_url_root: /gitlab
    #}

    {#- 
     Uncomment and customize if you can't use the default user to run GitLab (default: 'git')
     # user: git
    #}

    {#- Email settings #}
    email_from: {{ salt['pillar.get']('gitlab:smtp:from', salt['pillar.get']('smtp:from')) }}
    support_email: {{ salt['pillar.get']('gitlab:support_email', '') }}

    {#- User settings #}

    default_projects_limit: {{ salt['pillar.get']('gitlab:default_projects_limit', '10') }}
    {#-
    default_can_create_group: false  # default: true
    default_can_create_team: false   # default: true
    username_changing_enabled: false # default: true - User can change her username/namespace
    #}

    {#- Users management

    signup_enabled: true   # default: false - Account passwords are not sent via the email if signup is enabled.
    #}

    {#- Default project features settings #}
    default_projects_features:
      issues: true
      merge_requests: true
      wiki: true
      wall: false
      snippets: false

  {#- External issues trackers #}
  issues_tracker:
  {#-
    # redmine:
    #   ## If not nil, link 'Issues' on project page will be replaced with this
    #   ## Use placeholders:
    #   ##  :project_id        - GitLab project identifier
    #   ##  :issues_tracker_id - Project Name or Id in external issue tracker
    #   project_url: "http://redmine.sample/projects/:issues_tracker_id"
    #
    #   ## If not nil, links from /#\d/ entities from commit messages will replaced with this
    #   ## Use placeholders:
    #   ##  :project_id        - GitLab project identifier
    #   ##  :issues_tracker_id - Project Name or Id in external issue tracker
    #   ##  :id                - Issue id (from commit messages)
    #   issues_url: "http://redmine.sample/issues/:id"
    #
    #   ## If not nil, linkis to creating new issues will be replaced with this
    #   ## Use placeholders:
    #   ##  :project_id        - GitLab project identifier
    #   ##  :issues_tracker_id - Project Name or Id in external issue tracker
    #   new_issue_url: "http://redmine.sample/projects/:issues_tracker_id/issues/new"
    # 
    # jira:
    #   project_url: "http://jira.sample/issues/?jql=project=:issues_tracker_id"
    #   issues_url: "http://jira.sample/browse/:id"
    #   new_issue_url: "http://jira.sample/secure/CreateIssue.jspa"
  #}

  {#- Gravatar #}
  gravatar:
    enabled: true                 # Use user avatar image from Gravatar.com (default: true)
    {#-
    plain_url: "http://..."     # default: http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=mm
    ssl_url:   "https://..."    # default: https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=mm
    #}

  {#-
   2. Auth settings
   ==========================
  #}

  {#- LDAP settings #}
  ldap:
    {%- if salt['pillar.get']('gitlab:ldap:enabled', False)  %}
    {%- set ldap =  salt['pillar.get']('gitlab:ldap') %}
    enabled: true
    host: '{{ ldap['host'] }}'
    base: '{{ ldap['base'] }}'
    port: {{ ldap['port'] }}
    uid: '{{ ldap['uid'] }}'
    method: '{{ ldap['method'] }}' # "ssl" or "plain"
    bind_dn: '{{ ldap['bind_dn'] }}'
    password: '{{ ldap['password'] }}'
    allow_username_or_email_login: {{ ldap['allow_username_or_email_login']|default('true') }}
    {%- else %}
    enabled: false
    {%- endif %}

  {#- OmniAuth settings #}
  omniauth:
    {#- Allow login via Twitter, Google, etc. using OmniAuth providers #}
    enabled: {{ salt['pillar.get']('gitlab:omniauth:enabled', 'false') }}

    {#-
     CAUTION!
     This allows users to login without having a user account first (default: false).
     User accounts will be created automatically when authentication was successful.
    #}

    allow_single_sign_on: {{ salt['pillar.get']('gitlab:omniauth:allow_single_sign_on', 'false') }}

    {#- Locks down those users until they have been cleared by the admin (default: true). #}
    block_auto_created_users: {{ salt['pillar.get']('gitlab:omniauth:block_auto_created_users',' true') }}

    {#-
    Auth providers
     Uncomment the following lines and fill in the data of the auth provider you want to use
     If your favorite auth provider is not listed you can use others:
     see https://github.com/gitlabhq/gitlabhq/wiki/Using-Custom-Omniauth-Providers
     The 'app_id' and 'app_secret' parameters are always passed as the first two
     arguments, followed by optional 'args' which can be either a hash or an array.
    #}
    # providers:
      # - { name: 'google_oauth2', app_id: 'YOUR APP ID',
      #     app_secret: 'YOUR APP SECRET',
      #     args: { access_type: 'offline', approval_prompt: '' } }
      # - { name: 'twitter', app_id: 'YOUR APP ID',
      #     app_secret: 'YOUR APP SECRET'}
      # - { name: 'github', app_id: 'YOUR APP ID',
      #     app_secret: 'YOUR APP SECRET' }



  {#-
   3. Advanced settings
   ==========================
  #}

  {#- GitLab Satellites #}
  satellites:
    {#- Relative paths are relative to Rails.root (default: tmp/repo_satellites/) #}
    path: {{ home_dir }}/gitlab-satellites/

  {#- Backup settings #}
  backup:
    {#- Relative paths are relative to Rails.root (default: tmp/backups/) #}
    path: "tmp/backups"
    {#- default: 0 (forever) (in seconds) #}
    keep_time: 604800

  {#- GitLab Shell settings #}
  gitlab_shell:
    {#- REPOS_PATH MUST NOT BE A SYMLINK!!! #}
    repos_path: {{ repos_dir }}/
    hooks_path: {{ shell_dir }}/hooks/

    {#- Git over HTTP #}
    upload_pack: true
    receive_pack: true

    {#-
    If you use non-standard ssh port you need to specify it

    ssh_port: 22
    #}

  {#- 
  Git settings
  CAUTION!
  Use the default values unless you really know what you are doing
  #}

  git:
    bin_path: /usr/bin/git
    {#-
     Max size of a git object (e.g. a commit), in bytes
     This value can be increased if you have very large commits
    #}
    max_size: 5242880

    {#- Git timeout to read a commit, in seconds #}
    timeout: 10

  {#-
   4. Extra customization
   ==========================
  #}

  extra:
    {#-
    Google analytics. Uncomment if you want it
    
    google_analytics_id: '_your_tracking_id'
    #}

    {#- 
    Text under sign-in page (Markdown enabled)
    sign_in_text: |
      ![Company Logo](http://www.companydomain.com/logo.png)
      [Learn more about CompanyName](http://www.companydomain.com/)
    #}

development:
  <<: *base

test:
  <<: *base
  issues_tracker:
    redmine:
      project_url: "http://redmine/projects/:issues_tracker_id"
      issues_url: "http://redmine/:project_id/:issues_tracker_id/:id"
      new_issue_url: "http://redmine/projects/:issues_tracker_id/issues/new"

staging:
  <<: *base
