{#-
Copyright (C) 2013 the Institute for Institutional Innovation by Data
Driven Design Inc.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE  MASSACHUSETTS INSTITUTE OF
TECHNOLOGY AND THE INSTITUTE FOR INSTITUTIONAL INNOVATION BY DATA
DRIVEN DESIGN INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the names of the Institute for
Institutional Innovation by Data Driven Design Inc. shall not be used in
advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from the
Institute for Institutional Innovation by Data Driven Design Inc.

Author: Lam Dang Tung <lamdt@familug.org>
Maintainer: Lam Dang Tung <lamdt@familug.org>
-#}
# {{ pillar['message_do_not_modify'] }}
Gitlab::Application.configure do
  {#-
   Settings specified here will take precedence over those in config/application.rb
   Code is not reloaded between requests
  #}
  config.cache_classes = true

  {#-
   Full error reports are disabled and caching is turned on
  #}
  config.consider_all_requests_local       = false
  config.action_controller.perform_caching = true

  {#-
   Disable Rails's static asset server (Apache or nginx will already do this)
  #}
  config.serve_static_assets = false

  {#-
   Compress JavaScripts and CSS
  #}
  config.assets.compress = true

  {#-
   Don't fallback to assets pipeline if a precompiled asset is missed
  #}
  config.assets.compile = true

  {#-
   Generate digests for assets URLs
  #}
  config.assets.digest = true

  {#-
   Defaults to nil and saved in location specified by config.assets.prefix
   config.assets.manifest = YOUR_PATH

   Specifies the header that your server uses for sending files
   config.action_dispatch.x_sendfile_header = "X-Sendfile" # for apache
   config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for nginx

   Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
   config.force_ssl = true

   See everything in the log (default is :info)
   config.log_level = :debug

   Prepend all log lines with the following tags
   config.log_tags = [ :subdomain, :uuid ]

   Use a different logger for distributed setups
   config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)

   Use a different cache store in production
  #}
{%- if salt['pillar.get']('debug', False) %}
  config.log_level = :debug
{%- else %}
  config.log_level = :warn
{%- endif %}
  config_file = Rails.root.join('config', 'resque.yml')

  resque_url = if File.exists?(config_file)
                 YAML.load_file(config_file)[Rails.env]
               else
                 "redis://localhost:6379"
               end
  config.cache_store = :redis_store, resque_url

  {#-
   Enable serving of images, stylesheets, and JavaScripts from an asset server
   config.action_controller.asset_host = "http://assets.example.com"

   Precompile additional assets (application.js, application.css, and all non-JS/CSS are already added)
   config.assets.precompile += %w( search.js )

   Disable delivery errors, bad email addresses will be ignored
   config.action_mailer.raise_delivery_errors = false

   Enable threaded mode
   config.threadsafe! unless $rails_rake_task

   Enable locale fallbacks for I18n (makes lookups for any locale fall back to
   the I18n.default_locale when a translation can not be found)
  #}
  config.i18n.fallbacks = true

  {#-
   Send deprecation notices to registered listeners
  #}
  config.active_support.deprecation = :notify

  {#-
   Log the query plan for queries taking more than this (works
   with SQLite, MySQL, and PostgreSQL)
   config.active_record.auto_explain_threshold_in_seconds = 0.5
  #}
  config.action_mailer.delivery_method = :smtp
  {#- Defaults to:
  config.action_mailer.sendmail_settings = {
    location: '/usr/sbin/sendmail',
    arguments: '-i -t'
  }
  #}
  config.action_mailer.perform_deliveries = true
  config.action_mailer.raise_delivery_errors = true
end
