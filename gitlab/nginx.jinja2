{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

# {{ salt['pillar.get']('message_do_not_modify') }}

upstream gitlab {
    server unix:///var/lib/uwsgi/gitlab.sock;
}

server {
    listen 80;
{%- set ssl = salt['pillar.get']('gitlab:ssl', False) %}
{% if ssl %}
{% if salt['pillar.get']('gitlab:ssl_redirect', False) %}
{%- set hostnames = salt['pillar.get']('gitlab:hostnames') %}
    {# if https, redirect http port 80 to https port 443 #}
    server_name {% for hostname in hostnames %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ salt['pillar.get']('gitlab:hostnames')[0] }}$request_uri;
}
{# https server #}
server {
{% endif %}{# redirect http to https #}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}
    {{ ssl_config(ssl) }}
{% endif %}
{# web app logic #}
    server_name {% for hostname in  salt['pillar.get']('gitlab:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    root /home/gitlab/gitlabhq-{{ version }}/public;
    client_max_body_size 5m;
    server_tokens off;

{% include "nginx/block_hacks.jinja2" %}

{#- GitLab clone/push via https is broken, block it #}
    location ~ \.git$ {
        return 404;
    }

    location / {
        try_files $uri $uri/index.html $uri.html @gitlab;
    }

    location @gitlab {
        gzip off;
        uwsgi_modifier1 7;
        include uwsgi_params;
        uwsgi_pass gitlab;
    }

{% include 'nginx/location_robots.jinja2' %}

    location /assets/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }
}
