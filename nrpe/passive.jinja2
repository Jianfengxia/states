{#- Usage of this is governed by a license that can be found in doc/license.rst -#}

{#-
  Macro that set the check_interval and freshness_threshold for Shinken active
  checks.

  check_interval argument is minutes.
  while freshness_threshold are seconds.
  -#}
{%- macro passive_interval(interval_minutes, delay_minutes=10) -%}
  check_interval: {{ interval_minutes }}
  freshness_threshold: {{ (interval_minutes + delay_minutes) * 60 }}
{%- endmacro -%}

{%- macro passive_check(formula, domain_name=None, pillar_prefix=None, check_ssl_score=False, file_name=None) -%}
    {%- if not pillar_prefix -%}
        {%- set pillar_prefix = formula -%}
    {%- endif %}
    {%- if not file_name %}
      {%- set file_name = formula %}
    {%- endif %}

nsca-{{ formula }}:
  file:
    - managed
    - name: /etc/nagios/nsca.d/{{ file_name }}.yml
    - makedirs: True
    - user: root
    - group: nagios
    - mode: 440
    - template: jinja
{%- if formula == 'nrpe' %}
    - source: salt://nrpe/config.jinja2
{%- else %}
    - source: salt://{{ formula|replace('.', '/') }}/nrpe/config.jinja2
{%- endif %}
    - require:
      - file: /etc/nagios/nsca.d
{%- if caller is defined -%}
    {%- for line in caller().split("\n") %}
{{ line|trim|indent(6, indentfirst=True) }}
    {%- endfor -%}
{%- endif %}
    - watch_in:
      - service: nsca_passive
    - require_in:
{%- if check_ssl_score -%}
    {%- set ssl = salt['pillar.get'](pillar_prefix ~ ':ssl', False) %}
    {%- if ssl %}
      - file: check_ssl_configuration.py
    {%- endif -%}
{%- endif %}
      - service: nagios-nrpe-server

{% if check_ssl_score -%}
    {%- if ssl %}
        {#- manage cron file for sslyze NRPE check consumer -#}
        {%- set domain_name = salt['pillar.get'](pillar_prefix + ':hostnames')[0] if not domain_name -%}
        {%- if domain_name|replace('.', '')|int == 0 -%}
    {#- only check if it is a domain, not IP. int returns 0 for unconvertible value #}
/etc/cron.twice_daily/sslyze_check_{{ formula|replace('.', '-') }}:
  file:
    - absent

/etc/cron.d/sslyze_check_{{ formula|replace('.', '-') }}:
  file:
    - absent

            {%- if formula|replace('.', '') != formula %}
/etc/cron.twice_daily/sslyze_check_{{ formula }}:
  file:
    - absent
            {%- endif -%}

        {%- else %}
/etc/cron.twice_daily/sslyze_check_{{ formula|replace('.', '-') }}:
  file:
    - absent
        {%- endif -%}
    {%- else -%}
{#- same as next statement #}
/etc/cron.twice_daily/sslyze_check_{{ formula|replace('.', '-') }}:
  file:
    - absent
    {%- endif -%}
{%- else -%}
{#- same as other previous statement  #}
/etc/cron.twice_daily/sslyze_check_{{ formula|replace('.', '-') }}:
  file:
    - absent
{%- endif %}

{{ formula }}-monitoring:
  monitoring:
    - managed
    - name: {{ formula }}
{%- if formula == 'nrpe' %}
    - source: salt://nrpe/config.jinja2
{%- else %}
    - source: salt://{{ formula|replace('.', '/') }}/nrpe/config.jinja2
{%- endif %}
    - require:
      - module: nrpe-virtualenv
{%- if caller is defined -%}
    {%- for line in caller().split("\n") %}
{{ line|trim|indent(6, indentfirst=True) }}
    {%- endfor -%}
{%- endif %}
    - watch_in:
      - service: nagios-nrpe-server
{%- endmacro -%}

{%- macro passive_absent(formula, file_name=None) %}
    {%- if not file_name %}
      {%- set file_name = formula %}
    {%- endif %}

/etc/nagios/nrpe.d/{{ formula }}.cfg:
  file:
    - absent

nsca-{{ formula }}:
  file:
    - absent
    - name: /etc/nagios/nsca.d/{{ file_name }}.yml

/etc/cron.twice_daily/sslyze_check_{{ formula|replace('.', '-') }}:
  file:
    - absent

/var/lib/nagios/{{ formula }}_ssl_configuration.yml:
  file:
    - absent
{%- endmacro %}
