{#-
Use of this source code is governed by a BSD license that can be found
in the doc/license.rst file.

Author: Lam Dang Tung <lam@robotinfra.com>
Maintainer: Van Diep Pham <favadi@robotinfra.com>
-#}
# {{ salt['pillar.get']('message_do_not_modify') }}
upstream openerp {
    server unix:///var/lib/uwsgi/openerp.sock;
}
server {
    listen 80;

    client_max_body_size {{ salt['pillar.get']('openerp:max_upload_file_size', 1) }}m;
    {%- if salt['pillar.get']('openerp:ssl', False) %}
    {%- if salt['pillar.get']('openerp:ssl_redirect', False) %}
    {# if https, redirect http port 80 to https port 443 #}

    server_name {% for hostname in salt['pillar.get']('openerp:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};
    return 301 https://{{ salt['pillar.get']('openerp:hostnames')[0] }}$request_uri;
}
server {
{%- endif %}{# redirect http to https #}
{%- from 'nginx/macro.jinja2' import ssl_config with context %}
    {{ ssl_config(salt['pillar.get']('openerp:ssl', False)) }}
{%- endif %}

    server_name {% for hostname in salt['pillar.get']('openerp:hostnames') %}{{ hostname }}{% if not loop.last %} {% endif %}{% endfor %};

    root {{ web_root_dir }}/openerp;

{% include "nginx/block_hacks.jinja2" %}

{% include 'nginx/location_robots.jinja2' %}

{%- set timeout = salt['pillar.get']('openerp:timeout', 60) %}

    location / {
        uwsgi_pass openerp;
        include uwsgi_params;
        uwsgi_read_timeout {{ timeout }};
        uwsgi_send_timeout {{ timeout }};
    }
}
