# {{ salt['pillar.get']('message_do_not_modify') }}
{#
Consider adding the 1918 zones here, if they are not used in your
organization
#}
include "/etc/bind/zones.rfc1918";

{%- set tsig_key = salt['pillar.get']('bind:tsig_key', None) %}
{%- if tsig_key %}
key salt-managed. {
    algorithm hmac-md5;
    secret "{{ tsig_key }}";
};
{%- endif %}

{%- macro zone(zonename, zonedata, file, masters, forwarders, allow_dynamic) %}
{%- set zone_type = 'slave' if masters else 'master' %}
zone "{{ zonename }}" {
  type {{ zone_type }};

  {%- if 'notify' in zonedata %}
  notify {{ zonedata['notify'] }};
  {%- endif %}
  {%- if zone_type == "master" %}
  allow-update {
    {%- if tsig_key and allow_dynamic %}
    key salt-managed. ;
    {%- endif %}
    {% if zonedata['allow_update'] is defined -%}
    {{ zonedata['allow_update'] }};
    {%- endif %}
  };
    {%- if 'slaves' in zonedata %}
  allow-transfer { {{ zonedata['slaves']|join(';') }}; };
    {%- endif %}

  {%- else %}
  masters { {{ masters|join(';') }}; };
  {%- endif %}

  {% if zonedata['dnssec'] is defined and zonedata['dnssec'] -%}
  file "/var/lib/bind/zones/{{ file }}.signed";
  {% else -%}
  file "/var/lib/bind/zones/{{ file }}";
  {%- endif %}

    {%- if forwarders %}
  forward only;
  forwarders { {% for fwd in forwarders %}{{ fwd }}; {% endfor -%} };
    {%- endif %}
};
{%- endmacro %}

{% for zonename, zonedata in salt['pillar.get']('bind:zones', {}).iteritems() -%}
  {%- set file = salt['pillar.get']("bind:zones:" + zonename + ":file") %}
  {%- set masters = salt['pillar.get']("bind:zones:" + zonename + ":masters", []) %}
  {%- set forwarders = salt['pillar.get']("bind:zones:" + zonename + ":forwarders", []) %}
  {%- set allow_dynamic = salt['pillar.get']("bind:zones:" + zonename + ":allow_dynamic", False) %}
{{ zone(zonename, zonedata, file, masters, forwarders, allow_dynamic) }}
{% endfor %}
